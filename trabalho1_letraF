# pip install PyOpenGL PyOpenGL_accelerate
# pip install pygame



import pygame
from pygame.locals import *

from OpenGL.GL import *
from OpenGL.GLU import *

import numpy as np

verticies = (
    (1, -1, -1),
    (1, 1, -1),
    (-1, 1, -1),
    (-1, -1, -1),
    (1, -1, 1),
    (1, 1, 1),
    (-1, -1, 1),
    (-1, 1, 1)
    )

edges = (
    (0,1),
    (0,3),
    (0,4),
    (2,1),
    (2,3),
    (2,7),
    (6,3),
    (6,4),
    (6,7),
    (5,1),
    (5,4),
    (5,7)
    )

faces = (
    #Z negativo
    (0, 1, 2, 3),
    #Z positivo
    (4, 5, 7, 6),
    #X negativo
    (4, 0, 3, 6),
    #X positivo
    (1, 5, 7, 2),
    #Y negativo
    (4, 5, 1, 0),
    #Y positivo
    (6, 7, 2, 3)
)

def Cube():
    glBegin(GL_QUADS)
    for edge in edges:
        for vertex in edge:
            glVertex3fv(verticies[vertex])
    glEnd()

#parametros
# p: centro do cubo
# l: metade da largura do lado do cubo

def Cube2(p, l): #p = (x, y, z)
    glBegin(GL_QUADS)
    for face in faces:
        for vertex in face:

#alteração do tamanho do cubo
            v = np.array(verticies[vertex])*l
            v = v + np.array(p)
            glVertex3fv(v)
    glEnd()


def main():
    pygame.init()
    display = (800,600)
    pygame.display.set_mode(display, DOUBLEBUF|OPENGL)

    gluPerspective(45, (display[0]/display[1]), 0.1, 50.0)

    glTranslatef(0.0,0.0, -5)

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        #glRotatef(1, 3, 1, 1)
        glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT)
        #Cube()

        Cube2( (0, -1.5, 0) , 0.3)
        Cube2( (0, -1.7, 0) , 0.3)
        Cube2( (0, -1, 0) , 0.3)
        Cube2( (0, -0.5, 0) , 0.3)
        Cube2( (0, 0.0, 0) , 0.3)
        Cube2( (0, 0.1, 0) , 0.3)
        
        

        Cube2( (0.5, 0.1, 0) , 0.3)
        Cube2( (0.9, 0.1, 0) , 0.3)

        Cube2( (0.5, -1, 0) , 0.3)
        #Cube2( (0, 0.3, 0.30) , 0.3)
        pygame.display.flip()

        pygame.time.wait(10)


main()
